{"mappings":"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","sources":["src/controller/firebase.js","src/controller/view-controller.js","src/view/portada.js","src/view/registro.js","src/view/404Page.js","src/view/notas.js","src/view/muro.js","src/controller/router.js","src/main.js"],"sourcesContent":["export const signIn = (email, password) => firebase.auth()\n  .createUserWithEmailAndPassword(email, password);\n\nexport const logIn = (email, password) => firebase.auth()\n.signInWithEmailAndPassword(email, password);\n\n\nexport const googleLogin = () => {\n  const provider = new firebase.auth.GoogleAuthProvider();\n  return firebase.auth().signInWithPopup(provider);\n};\n\nconst db=firebase.firestore();\n\nexport const saveUsers = () => {\n  const user = firebase.auth().currentUser;\n\n  db.collection('users').doc(user.uid).set({\n\n    user: user.displayName,\n    avatar: user.photoURL,\n    uid: user.uid,\n    email: user.email,\n  });\n};\n\nexport const signOut = () => firebase.auth().signOut();\n\nexport const addNote = (textNewNote) => {\n  const user = firebase.auth().currentUser;\n  db.collection('notes').add({\n  user: user.displayName,\n  email: user.email,\n  date: firebase.firestore.Timestamp.fromDate(new Date()), \n  textNewNote,\n  \n  })\n  .then(resp =>{\n    console.log(resp);\n\n  })\n  .catch(error=>{\n    console.log(error);\n\n  })\n\n}\n","//Este archivo maneja todas las funciones de firebase.js que se van a usar\n\nimport {signIn, logIn, googleLogin, saveUsers, signOut,addNote} from './firebase.js';\n\n\n\n\nexport const changeHash = (hash) => {\n  location.hash = hash;\n};\nexport const signInOnSubmit = () => { //funcion de registro manual\n  const email = document.getElementById(\"email-registro\").value;\n  const password = document.getElementById(\"password-registro\").value;\n  \n  signIn(email , password)\n    // eslint-disable-next-line no-alert\n\n    .then(() => alert('Datos Guardados'), changeHash('#/'))\n    .catch((error) => {\n      const errorMessage = error.message;\n      alert(errorMessage);\n    });\n};\n\nexport const loginWithGoogle = () => {\n  googleLogin().then(() => {\n    changeHash('/home');\n    saveUsers();\n    \n  });\n};\n\nexport const logInOnSubmit = () => { //funcion de logueado manual\n  const email = document.getElementById(\"email-login\").value;\n  const password = document.getElementById(\"password-login\").value; \n\n\n\n  logIn(email, password)\n    .then(() =>  {\n      saveUsers();\n      changeHash('/home');\n\n    })\n    .catch((error) => {\n      const errorMessage = error.message;\n      alert(errorMessage);\n      \n    });\n};\n\nexport const signOutSubmit = () => {\n  signOut().then(() => {\n    alert('Cerrando sesión');\n\n    changeHash('#');\n  }).catch((error) => {\n    const errorMessage = error.message;\n    alert(errorMessage);\n  });\n};\nexport const addNoteOnSubmit = (post) => {\n\n\n addNote(post)\n    console.log(post);\n     \n};\n\nexport const feedUpdate = (callback) => {\n  const db = firebase.firestore();\n  db.collection('notes').orderBy (\"date\").onSnapshot(callback);\n   \n};\n\nexport const deletePost = (id) => {\n  const db = firebase.firestore();\n  db.collection('notes').doc(id).delete();\n}\n\n","/* este archivo contiene la vista de la portada \nintegrada con el LOGIN y con acceso (hash) al REGISTRO */\nimport {logInOnSubmit , loginWithGoogle} from '../controller/view-controller.js';\n\n\nexport const portadaLogin = () => {\n\n  const container = document.createElement('section');\n  const viewPortada = \n  `\n  <div class=\"portada-header-container\">\n    <h1 class=\"portada-titulo\">Naturópolis</h1>\n    <p class=\"portada-texto\">\n      ¡Bienvenida! Haz login para acceder a tu muro.\n    </p>\n    <img src=\"../Assets/imagenes/Naturopolis-logo-portada.svg\" alt=\"logo\" class=\"logo-portada\">\n  </div>\n  <div class=\"formulario-login-container\" id=\"formulario-login-container\">\n  <h2 class=\"registro-titulo\">Haz login</h2>\n    <form action=\"#\" method=\"post\" id=\"form-login\" class=\"form-login\">\n      <input type=\"email\" name=\"email-login\" id=\"email-login\"  class=\"email-login\" placeholder=\"tucorreo@correo.com\" value=\"\" >\n      <input type=\"password\" name=\"password-login\" id=\"password-login\" class=\"password-login\" placeholder=\"contraseña\" value=\"\" >\n        <h4>Puedes hacer login manual o puedes acceder con tu cuenta de Google</h4>\n          <!-- Botón switch login -->\n      <div class=\"container-boton\">\n        <div class=\"switch\">\n          <input type=\"radio\" class=\"switch-input\" name=\"view\" value=\"\" id=\"login\" checked>\n          <label for=\"login\" class=\"switch-label switch-label-off\">login</label>\n          <input type=\"radio\" class=\"switch-input\" name=\"view\" value=\"\" id=\"google-btn\">\n          <label for=\"google-btn\" class=\"switch-label switch-label-on\">\n            <img class=\"logo-google\" src=\"./Assets/imagenes/flat-color-icons_google.svg\" alt=\"google\">\n          </label>\n          <span class=\"switch-selection\"></span>\n        </div>\n      </div>\n    </form>\n    <p class=\"registrate\">¿No tienes cuenta? Entonces <a href=\"#/registro\">regístrate</a> y comienza a disfrutar de una vida natural.</p>\n  </div>\n    `;\n\n  \n\n  container.innerHTML = viewPortada;\n\n\n  const btnLogin = container.querySelector('#login');\n  btnLogin.addEventListener('click', ()=>{\n    \n    logInOnSubmit();\n  });\n  const btnGoogle = container.querySelector('#google-btn');\n  btnGoogle.addEventListener('click' , loginWithGoogle);\n  return container;\n\n};","import {signInOnSubmit , loginWithGoogle} from '../controller/view-controller.js';\n\n\nexport const registro = () =>{\n\n  const container = document.createElement('section');\n  const viewRegistro = \n  `\n  <div class=\"portada-header-container\">\n  <h1 class=\"portada-titulo\">Naturópolis</h1>\n  <p class=\"portada-texto\">\n        ¡Bienvenida! Regístrate para acceder a tu muro.\n      </p>\n      <img src=\"../Assets/imagenes/Naturopolis-logo-portada.svg\" alt=\"logo\" class=\"logo-portada\">\n    </div>\n  <div class=\"formulario-registro-container\" id=\"formulario-registro-container\">\n  <h2 class=\"registro-titulo\">Regístrate</h2>\n    <form action=\"#\" method=\"post\" id=\"form-registro\" class=\"form-registro\">\n      <input type=\"email\" name=\"email-registro\" id=\"email-registro\"  class=\"email\" placeholder=\"tucorreo@correo.com\" value=\"\">\n      <input type=\"text\" name=\"nombre-usuario\" id=\"nombre-usuario\"  class=\"email\" placeholder=\"Marie Veggie\" value=\"\">\n      <input type=\"password\" name=\"password-registro\" id=\"password-registro\" class=\"password\" placeholder=\"contraseña\" value=\"\">\n        <h4>Puedes hacer registro manual o puedes acceder con tu cuenta de Google</h4>\n        \n          <!-- Botón switch registro -->\n      <div class=\"container-boton\">\n        <div class=\"switch\">\n          <input type=\"radio\" class=\"switch-input\" name=\"view\" id=\"registro\">\n          <label for=\"registro\" class=\"switch-label switch-label-off\">registro</label>\n          <input type=\"radio\" class=\"switch-input\" name=\"view\" value=\"google-btn\" id=\"google-btn\" checked>\n          <label for=\"google-btn\" class=\"switch-label switch-label-on\">\n            <img class=\"logo-google\" src=\"./Assets/imagenes/flat-color-icons_google.svg\" alt=\"google\">\n          </label>\n          <span class=\"switch-selection\"></span>\n        </div>\n      </div>\n    </form>\n    <p class=\"registrate\">¿ya tienes cuenta? Entonces <a href=\"#/\">haz login</a> y comienza a disfrutar de una vida natural.</p>\n  </div>\n  `;\n\n  container.innerHTML = viewRegistro;\n\n\n  const btnRegistro = container.querySelector('#registro');\n  btnRegistro.addEventListener('click', ()=>{\n    \n    signInOnSubmit();\n  });\n\n  const btnGoogle = container.querySelector('#google-btn');\n  btnGoogle.addEventListener('click' , loginWithGoogle);\n\n\n  return container;\n\n};","export const error = () => {\n\n  const container = document.createElement('section');\n  const viewError = \n  ` \n    <div class=\"error-header-container\"> \n    <h1 class=\"error-titulo\">Naturópolis</h1>\n    <h3 class=\"error-texto\">\n      ¡UPS! Esta página no existe aún, estamos trabajado en ella.\n    </h3>\n    <br></br>\n    <img src=\"../Assets/imagenes/Naturopolis-logo portada.svg\" alt=\"logo\" class=\"logo-portada\">\n    <p class=\"error\">Puedes volver al <a id=\"inicio-link\" href=\"#/\">inicio</a> y comienza a disfrutar de una vida natural.</p>\n    </div>\n    `;\n\n  \n\n  container.innerHTML = viewError;\n\n\n  return container;\n\n};","import {feedUpdate , deletePost} from '../controller/view-controller.js'\n\n\nexport const notas = ()=>{\n\n\n  const container = document.createElement('section');\n  container.className = 'user-post-container';\n\n \n  feedUpdate((querySnapshot) => {\n    const userActive = firebase.auth().currentUser.email;\n    \n    container.innerHTML= '';\n    querySnapshot.forEach((doc) => {\n\n      let data = doc.data();\n\n         container.innerHTML += `<div class=\"post-container\">\n          <div class=\"user-info\">\n          <img src=\"../Assets/imagenes/Avatar.svg\" alt=\"avatar\" class=\"img-avatar\">\n          <p class=\"user-name\">${data.user}</p>\n        </div>\n\n        <div class=\"post-texto-container\">\n          <div class=\"post-texto\">\n            <p>${data.textNewNote}</p>\n          </div>  \n\n\n\n        <div class=\"nav-vertical\">\n        <a href=\"\" class=\"likes\" id=\"likes\" ><img  src=\"../Assets/imagenes/likes.svg\" alt=\"likes\"></a>\n        <a href=\"\" class=\"comments\" id=\"comments\"><img  src=\"../Assets/imagenes/comments.svg\" alt=\"comments\"></a>\n        \n        </div>\n      </div> \n\n\n        `;\n\n      if (data.email ===  userActive){\n\n        container.innerHTML += `\n        <div class=\"nav-post\">\n        <button class=\"btn-editar\" id=\"editarPost\" value=\"${doc.id}\" data-post=\"${(data.textNewNote)}\" >editar</button>\n        <button class=\"btn-borrar\" data-id=\"${doc.id}\" id=\"btn-borrar\">borrar</button>\n        </div>\n        `;\n      }\n\n\n     });\n\n     const btnsDelete = container.querySelectorAll(\".btn-borrar\");\n     btnsDelete.forEach((btn) =>\n      btn.addEventListener(\"click\", async (e) => {\n        try {\n          await deletePost(e.target.dataset.id);\n        } catch (error) {\n          console.log(error);\n        }\n      }));\n\n\n     const btnEditar=  document.querySelectorAll(\".btn-editar\");\n\n     btnEditar.forEach((item)=>{\n      console.log(item);\n       const currentText = (item.dataset.post);\n        console.log(item.dataset , currentText);\n       console.log(currentText);\n\n       item.addEventListener('click', ()=>{\n\n         editarPost(item.value, currentText);\n         \n       })\n     });\n\n     const editarPost = (id, currentText) => {\n      const db = firebase.firestore();\n\n      const textNewNote = prompt('Ingresa el nuevo texto', currentText)\n      if (textNewNote.trim().length === 0) {\n          alert (\"Rellena el campo solicitado\")\n      };\n      \n    \n           return db.collection(\"notes\").doc(id).update({\n               textNewNote\n          })\n              .then(() => {\n                  console.log(\"Exito\");\n              })\n              .catch((error) => {\n                console.log(textNewNote);\n                  console.error(\"Error: \", error);\n              });\n      };\n      \n\n\n      \n\n  });\n\n \n \n  \n\n;\n    \n\n  return container;\n\n  \n\n} \n","\n//Importar las funciones del view controller que usaremos en el muro\n\nimport {signOutSubmit,addNoteOnSubmit} from '../controller/view-controller.js';\nimport {notas} from './notas.js'\n\nexport const muro = () =>{\n\n  const container = document.createElement('section');\n  const user=firebase.auth().currentUser;\n  container.className = 'muro';\n\n\n  const viewMuro= `\n  <header class=\"header-container\" id=\"header-container\">\n    <img src=\"../Assets/imagenes/Naturopolis-logo-muro.svg\" alt=\"logo\" class=\"logo\">\n    <h1 id=\"titulo-header\" class=\"titulo-header\">\n      Naturópolis\n    </h1>\n    <button class=\"btn-signOut\"id=\"btn-signOut\">\n      <img src=\"../Assets/imagenes/Frame-icono-logOut.svg\" alt=\"logOut\" class=\"botón-logOut\">\n    </button>\n  </header>\n  <section class=\"perfil-usuario\" id=\"perfil-usuario\">\n    <img src=\"${user.photoURL}\" alt=\"\" class=\"avatar-usuario\">\n    <h3 class=\"nombre-usuario-perfil\" id=\"nombre-usuario\">${user.displayName}</h3>\n  </section>\n\n\n  <section class=\"crear-post\" id=\"section-post\">\n    <form class=\"form\" id=\"form\">\n      <textarea name=\"\" id=\"texto-input\" class=\"texto-input\" wrap=\"hard\" maxlength=\"500\" >\n    \n      </textarea>\n      <button type=\"submit\" class=\"btn-send\" id=\"btn-send\">\n        <img src=\"../Assets/imagenes/send.svg\" alt=\"send\">\n      </button>\n    </form>\n  </section>\n  `;\n\n  container.innerHTML = viewMuro;\n\n    \n    const signOutBtn = container.querySelector('#btn-signOut');\n    signOutBtn.addEventListener('click' , ()=>{\n      signOutSubmit();\n    });\n\n    const formulario = container.querySelector('#form');\n    formulario.addEventListener('submit',(event)=>{\n      event.preventDefault();\n\n      const textarea = container.querySelector('#texto-input');\n      console.log(textarea.value);\n      addNoteOnSubmit(textarea.value);\n      formulario.reset();\n    \n\n    });\n\n// Usamos INSERTBEFORE para agregar las PUBLICACIONES al muro\n  const crearPost = container.querySelector('#section-post');\n  container.insertBefore(notas() , crearPost);\n    \n  return container;\n  };","import {portadaLogin} from '../view/portada.js';\nimport {registro} from '../view/registro.js';\nimport {error} from '../view/404Page.js';\nimport {muro} from '../view/muro.js';\n\nexport const cambioRuta = (hash) =>{\n\n  if (hash === '#/'){\n    return mostrarVistas(hash);\n  } else if (hash === '#/registro'){\n      return mostrarVistas(hash);\n  } else if (hash === '#/home'){\n      return mostrarVistas(hash);\n  }\n  };\n  \n\n  const mostrarVistas = (hash) =>{\n    const containerRoot = document.getElementById('root');\n    containerRoot.innerHTML = '';\n\n    switch (hash)  {\n      case '#/' : containerRoot.appendChild(portadaLogin());\n      break;\n      case '#/registro' : containerRoot.appendChild(registro());\n      break;\n      case '#/home' : containerRoot.appendChild(muro());\n      break\n      default : containerRoot.appendChild(error());\n    }\n\n}","// Este es el punto de entrada de tu aplicacion\n\nimport { cambioRuta } from './controller/router.js';\nimport { changeHash } from './controller/view-controller.js';\n\n\n firebase.auth().onAuthStateChanged((user) => {\n  if (user) {\n\n    \n\n    changeHash('/home');\n\n  } else {\n     \n    changeHash('#/');\n\n  }\n});\n\n\n\nconst init = () =>{\n\n\n  window.addEventListener('hashchange' , ()=>{ \n    \n    cambioRuta(window.location.hash);\n  })\n\n \n};\n\n\nwindow.addEventListener('load', init);\n\n\n\n"],"names":["email","password","firebase","auth","createUserWithEmailAndPassword","signInWithEmailAndPassword","provider","GoogleAuthProvider","signInWithPopup","db","firestore","user","currentUser","collection","doc","uid","set","displayName","avatar","photoURL","signOut","textNewNote","add","date","Timestamp","fromDate","Date","then","resp","console","log","catch","error","changeHash","hash","location","document","getElementById","value","$4e514002b5a25448$exports","signIn","alert","errorMessage","message","googleLogin","saveUsers","logIn","post","addNote","callback","orderBy","onSnapshot","id","delete","container","createElement","className","$fca9c06b81cce712$exports","feedUpdate","querySnapshot","userActive","innerHTML","forEach","data","querySelectorAll","editarPost","btn","addEventListener","async","e","deletePost","target","dataset","viewMuro","mostrarVistas","containerRoot","appendChild","$64d3d66bb93534bc$exports","portadaLogin","$ea62c65dbc292881$exports","registro","$306e455c7b99f52c$exports","muro","$ab276ce233b18aba$exports","onAuthStateChanged","window","$a949a19b5dc0c2fa$exports","cambioRuta"],"version":3,"file":"index.7bd54d85.js.map","sourceRoot":"../"}